{"ast":null,"code":"var _jsxFileName = \"/home/venkatesh/Desktop/javascript coding/react-video-chat/client/src/Homepage.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Peer from \"simple-peer\";\nimport io from \"socket.io-client\";\nconst hostname = \"localhost:4000\";\nconst socket = io(hostname);\n\nconst Homepage = () => {\n  const videoRef = useRef(null);\n  const peerVideoRef = useRef(null);\n  const [adminStream, adminSetStream] = useState(\"\");\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      socket.emit(\"NewClient\");\n      adminSetStream(stream);\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n      console.log(videoRef.current);\n      let client = {};\n\n      function InitPeer(type) {\n        console.log(\"peer received\");\n        let peer = new Peer({\n          initiator: type === \"init\" ? true : false,\n          stream: stream,\n          trickle: false\n        });\n        console.log(\"peer\", peer);\n        peer.on(\"stream\", stream => {\n          console.log(\"stream\", stream);\n          peerVideoRef.current.srcObject(stream);\n          peerVideoRef.current.play();\n        });\n        peer.on(\"close\", () => {\n          peerVideoRef.current.remove();\n          document.getElementById(\"peerVideo\").remove();\n          peerVideoRef.current.destroy();\n          console.log(\"peer destroyed\");\n        });\n        return peer;\n      }\n\n      socket.on(\"CreatePeer\", () => {\n        client.gotAnswer = false;\n        let peer = InitPeer(\"init\");\n        peer.on(\"signal\", data => {\n          if (!client.gotAnswer) {\n            socket.emit(\"offer\", data);\n          }\n        });\n        client.peer = peer;\n      });\n      socket.on(\"backOffer\", offer => {\n        let peer = InitPeer(\"notInit\");\n        peer.on(\"signal\", data => {\n          socket.emit(\"Answer\", data);\n        });\n        peer.signal(offer);\n        client.peer = peer;\n      });\n      socket.on(\"backAnswer\", answer => {\n        client.gotAnswer = true;\n        let peer = client.peer;\n        peer.signal(answer);\n      });\n      socket.on(\"SessionActive\", () => {\n        console.log(\"Session is active , comeback later\");\n      });\n    }).catch(err => console.log(err));\n  }, []); // console.log(adminStream)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \" this is homepage\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-sm-6 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"embed-responsive embed-responsive-16by9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    className: \"embed-responsive-item\",\n    muted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-12 col-sm-6 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"peerDiv\",\n    className: \"embed-responsive embed-responsive-16by9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: peerVideoRef,\n    className: \"\\\"embed-responsive-item\\\"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Homepage;","map":{"version":3,"sources":["/home/venkatesh/Desktop/javascript coding/react-video-chat/client/src/Homepage.js"],"names":["React","useEffect","useState","useRef","Peer","io","hostname","socket","Homepage","videoRef","peerVideoRef","adminStream","adminSetStream","navigator","mediaDevices","getUserMedia","video","audio","then","stream","emit","current","srcObject","play","console","log","client","InitPeer","type","peer","initiator","trickle","on","remove","document","getElementById","destroy","gotAnswer","data","offer","signal","answer","catch","err"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\n\nconst hostname = \"localhost:4000\"\nconst socket = io(hostname)\n\nconst Homepage = () => {\n  const videoRef = useRef(null)\n  const peerVideoRef = useRef(null)\n  const [adminStream, adminSetStream] = useState(\"\")\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        socket.emit(\"NewClient\")\n        adminSetStream(stream)\n        videoRef.current.srcObject = stream\n        videoRef.current.play()\n        console.log(videoRef.current)\n\n        let client = {}\n\n        function InitPeer(type) {\n          console.log(\"peer received\")\n          let peer = new Peer({\n            initiator: type === \"init\" ? true : false,\n            stream: stream,\n            trickle: false,\n          })\n\n          console.log(\"peer\", peer)\n\n          peer.on(\"stream\", (stream) => {\n            console.log(\"stream\", stream)\n            peerVideoRef.current.srcObject(stream)\n            peerVideoRef.current.play()\n          })\n\n          peer.on(\"close\", () => {\n            peerVideoRef.current.remove()\n            document.getElementById(\"peerVideo\").remove()\n            peerVideoRef.current.destroy()\n            console.log(\"peer destroyed\")\n          })\n\n          return peer\n        }\n\n        socket.on(\"CreatePeer\", () => {\n          client.gotAnswer = false\n\n          let peer = InitPeer(\"init\")\n          peer.on(\"signal\", (data) => {\n            if (!client.gotAnswer) {\n              socket.emit(\"offer\", data)\n            }\n          })\n          client.peer = peer\n        })\n\n        socket.on(\"backOffer\", (offer) => {\n          let peer = InitPeer(\"notInit\")\n\n          peer.on(\"signal\", (data) => {\n            socket.emit(\"Answer\", data)\n          })\n          peer.signal(offer)\n          client.peer = peer\n        })\n\n        socket.on(\"backAnswer\", (answer) => {\n          client.gotAnswer = true\n          let peer = client.peer\n          peer.signal(answer)\n        })\n\n        socket.on(\"SessionActive\", () => {\n          console.log(\"Session is active , comeback later\")\n        })\n      })\n      .catch((err) => console.log(err))\n  }, [])\n\n  // console.log(adminStream)\n\n  return (\n    <div>\n      <h4> this is homepage</h4>\n\n      <div className='col-12 col-sm-6 d-flex justify-content-center'>\n        <div className='embed-responsive embed-responsive-16by9'>\n          <video ref={videoRef} className='embed-responsive-item' muted>\n            {}\n          </video>\n        </div>\n      </div>\n\n      <div class='col-12 col-sm-6 d-flex justify-content-center'>\n        <div id='peerDiv' className='embed-responsive embed-responsive-16by9'>\n          <video ref={peerVideoRef} className='\"embed-responsive-item\"'></video>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Homepage\n"]},"metadata":{},"sourceType":"module"}